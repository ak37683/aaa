from flask import Flask, request, jsonify, send_from_directory
from moviepy.editor import VideoFileClip
import librosa
import numpy as np
import os

app = Flask(__name__, static_url_path='')  # Serve static files (HTML, CSS, JS)

UPLOAD_FOLDER = 'uploads'
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

def analyze_video(video_path):
    """
    Analyzes the video and returns a list of suggested viral clips.
    """
    try:
        clip = VideoFileClip(video_path)
        audio, sr = librosa.load(video_path)

        # Example: Detect moments with high audio energy
        energy = np.sum(audio**2)
        threshold = energy * 0.1  # Example threshold

        # Placeholder:  Replace with more sophisticated analysis
        clips = []
        current_time = 0
        while current_time < clip.duration:
            clips.append({'start': current_time, 'end': min(current_time + 5, clip.duration)}) # Example: 5-second clips
            current_time += 5

        clip.close()
        return clips
    except Exception as e:
        print(f"Error analyzing video: {e}")
        return []

@app.route('/analyze', methods=['POST'])
def analyze():
    if 'video' not in request.files:
        return jsonify({'error': 'No video file provided'}), 400

    video = request.files['video']
    if video.filename == '':
        return jsonify({'error': 'No video selected'}), 400

    if video:
        filename = os.path.join(app.config['UPLOAD_FOLDER'], video.filename)
        video.save(filename)

        clips = analyze_video(filename)

        return jsonify({'clips': clips})

    return jsonify({'error': 'An error occurred'}), 500

# Serve static files (HTML, CSS, JS)
@app.route('/<path:path>')
def serve_static(path):
    return send_from_directory('.', path)

@app.route('/')
def index():
    return send_from_directory('.', 'index.html')

if __name__ == '__main__':
    app.run(debug=True)
